[[model]]
author: Chon Lok Lei
name: compensated_voltage_clamp_ikr
desc: """
Myokit version of a simple IKr model under a simplified voltage clamp model
with standard compensation. Only the major effects are modelled. Assume
also linear leak (residual) in it.

Units:
    time in [ms]
    voltage in [mV]
    current in [pA]
    capacitance in [pF]
    resistance in [GOhm]
"""

# Initial values
membrane.V = -80.0 [mV]
ikr.open = 0
ikr.active = 1


[ikr]
use membrane.V
IKr = g * open * active * (V - rev.EK)
dot(open) = (inf - open) / tau
    inf = k1 * tau
    tau = 1 / (k1 + k2)
    k1 = p1 * exp(p2 * V)
    k2 = p3 * exp(-p4 * V)
dot(active) = (inf - active) / tau
    inf = k4 * tau
    tau = 1 / (k3 + k4)
    k3 = p5 * exp(p6 * V)
    k4 = p7 * exp(-p8 * V)
p1 = 2.26e-4 [1/ms]
p2 = 0.0699 [1/mV]
p3 = 3.45e-5 [1/ms]
p4 = 0.05462 [1/mV]
p5 = 0.0873 [1/ms]
p6 = 8.91e-3 [1/mV]
p7 = 5.15e-3 [1/ms]
p8 = 0.03158 [1/mV]
g = 0.1524 * 1e3 [pA/mV]  # in nA range


[engine]
time = 0 bind time
    in [ms]
pace = 0 bind pace


[membrane]
use voltageclamp.Vp, voltageclamp.rseries, voltageclamp.voffset_eff
Iion = ikr.IKr + voltageclamp.ILeak
cm = voltageclamp.cm_est in [pF]  # in order of pF; assumption
dot(V) = (Vp - V + voffset_eff) / tau - Iion / cm
    tau = cm * rseries in [ms]
    desc: membane potential
    in [mV]

[voltageclamp]
use membrane.V
rseries = 5.0 * 1e-3 [GR]  # in order of MegaOhms; TODO: fit
voffset_eff = 5 [mV]  # TODO: fit
rseries_est = 0.9 * 5.0e-3 [GR]  # TODO: later this one use measured value
cm_est = 10.0 [pF]  # TODO: similar to rseries_est, set value
Vc = engine.pace
    desc: command voltage
    in [mV]
Vp = Vc + Iin * rseries_est
    desc: pipette voltage
    in [mV]
## assume `Vp` -> `Vc + Iin * rseries_est`
## assume `Iout` -> `Iin`
## assume `Vp` -> `V_clamp`
## assume `cm` estimated perfectly
## assume `cprs` estimated perfectly
Iin = membrane.Iion
    desc: measured current
    in [pA]
## assume linear leak residual
gLeak = 10 [pA/mV]
ELeak = -80 [mV]
ILeak = gLeak * (V - ELeak) in [pA]


#
# Ionic concentrations (clamp)
#
[potassium]
Ki = 110 [mM]
Ko = 4 [mM]

[sodium]
Nai = 10 [mM]
#Nao = 150 [mM]
Nao = 97.5 [mM]

[calcium]
Cai = 1e-5 in [mM]
Cao = 2.05 [mM]


#
# Reversal parameters
#
[rev]
use phys.RTF
ECa = 0.5 * RTF * log(calcium.Cao / calcium.Cai)
    in [mV]
EK = RTF * log(potassium.Ko / potassium.Ki)
    in [mV]
ENa = RTF * log(sodium.Nao / sodium.Nai)
    in [mV]


#
# Physical constants
#
[phys]
R = 8.314472 [J/mol/K]
T = 310 [K]  # 36-37oC (BT)
F = 9.64853415e4 [C/mol]
RTF = R * T / F * 1e3 in [mV]
